/*
 * This file is generated by jOOQ.
*/
package com.reservation.jooq.tables;


import com.reservation.jooq.Keys;
import com.reservation.jooq.Study;
import com.reservation.jooq.tables.records.ReservationRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Reservation extends TableImpl<ReservationRecord> {

    private static final long serialVersionUID = -405985560;

    /**
     * The reference instance of <code>study.reservation</code>
     */
    public static final Reservation RESERVATION = new Reservation();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ReservationRecord> getRecordType() {
        return ReservationRecord.class;
    }

    /**
     * The column <code>study.reservation.id</code>.
     */
    public final TableField<ReservationRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>study.reservation.name</code>.
     */
    public final TableField<ReservationRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * Create a <code>study.reservation</code> table reference
     */
    public Reservation() {
        this("reservation", null);
    }

    /**
     * Create an aliased <code>study.reservation</code> table reference
     */
    public Reservation(String alias) {
        this(alias, RESERVATION);
    }

    private Reservation(String alias, Table<ReservationRecord> aliased) {
        this(alias, aliased, null);
    }

    private Reservation(String alias, Table<ReservationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Study.STUDY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ReservationRecord, Integer> getIdentity() {
        return Keys.IDENTITY_RESERVATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ReservationRecord> getPrimaryKey() {
        return Keys.KEY_RESERVATION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ReservationRecord>> getKeys() {
        return Arrays.<UniqueKey<ReservationRecord>>asList(Keys.KEY_RESERVATION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Reservation as(String alias) {
        return new Reservation(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Reservation rename(String name) {
        return new Reservation(name, null);
    }
}
